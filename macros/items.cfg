#textdomain wesnoth-Nightfall_Bastion

#define ITEM_HALO
    halo = "halo/misc/leadership-flare-1.png:20,halo/misc/leadership-flare-2.png:20,halo/misc/leadership-flare-3.png:20,halo/misc/leadership-flare-4.png:20,halo/misc/leadership-flare-4.png:20,halo/misc/leadership-flare-6.png:20,halo/misc/leadership-flare-7.png:20,halo/misc/leadership-flare-8.png:20,halo/misc/leadership-flare-9.png:20,halo/misc/leadership-flare-10.png:20,halo/misc/leadership-flare-11.png:20,halo/misc/leadership-flare-12.png:20,halo/misc/leadership-flare-13.png:20,misc/blank-hex.png:1000"
#enddef

#define LOOT_CHEST_OF_GOLD _SIDE _AMOUNT _X _Y
    [item]
        x,y={_X},{_Y}
        image=items/chest-plain-closed.png
    [/item]

    [event]
        name=moveto
        [filter]
            x,y={_X},{_Y}
            side={_SIDE}
        [/filter]

        [sound]
            name=open-chest.wav
        [/sound]

        [remove_item]
            x,y={_X},{_Y}
        [/remove_item]

        [item]
            x,y={_X},{_Y}
            image=items/chest-plain-open.png
        [/item]

        [redraw][/redraw]

        {VARIABLE temp_gold_found ({_AMOUNT})}

        [loot]
            side=$unit.side
            amount={_AMOUNT}
        [/loot]

        {CLEAR_VARIABLE temp_gold_found}
    [/event]
#enddef

# scenario effect items

#define ITEM_POTION_BLOOD _SIDE _X _Y _VAR
    [event]
        name=prestart

        {VARIABLE {_VAR} no}
    [/event]

    [item]
        x,y={_X},{_Y}
        image="items/potion-red.png"
        {ITEM_HALO}
    [/item]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            side={_SIDE}

            x,y={_X},{_Y}
        [/filter]

        [filter_condition]
            {VARIABLE_CONDITIONAL {_VAR} equals no}
        [/filter_condition]

        # wmllint: markcheck off
        [item_dialog]
            variable={_VAR}
            name= _ "Potion of Blood"
            image="icons/potion_red_medium.png"
            description="<i>"+_"This elixir, distilled from the essence of lifeblood itself, possesses the arcane power to mend our battle-worn flesh and restore our waning vigor."+"</i>"
            effect= _"<span fgcolor='grey'><b>Fully heals the drinker.</b></span>"
            take_string= _"Drink It"
            leave_string= _"Refuse It"
        [/item_dialog]
        # wmllint: markcheck on

        [if]
            {VARIABLE_CONDITIONAL {_VAR} equals yes}
            [then]
                {REMOVE_IMAGE {_X} {_Y}}
                [object]
                    silent=yes
                    duration=scenario
                    [filter]
                        x,y={_X},{_Y}
                    [/filter]
                    [effect]
                        apply_to=hitpoints
                        heal_full=yes
                    [/effect]
                [/object]
            [/then]
        [/if]
    [/event]
#enddef

#define ITEM_POTION_ADVERSE _SIDE _X _Y
    [event]
        name=prestart

        {VARIABLE potion_temp_slowing_picked no}
    [/event]

    [item]
        x,y={_X},{_Y}
        image="items/potion-yellow.png"
        {ITEM_HALO}
    [/item]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            side={_SIDE}

            x,y={_X},{_Y}
            race=vampire
        [/filter]

        [filter_condition]
            {VARIABLE_CONDITIONAL potion_temp_slowing_picked equals no}
        [/filter_condition]

        # wmllint: markcheck off
        [item_dialog]
            variable=potion_temp_slowing_picked
            name= _ "Potion of Unknown Effect"
            image="items/potion-yellow.png"
            description="<i>"+_"It is not certain what effect this yellowish liquid can have on the drinker."+"</i>"
            effect= _"<span fgcolor='grey'><b>Effect Not Known</b></span>"
            take_string= _"Drink It"
            leave_string= _"Refuse It"
        [/item_dialog]
        # wmllint: markcheck on

        [if]
            {VARIABLE_CONDITIONAL potion_temp_slowing_picked equals yes}
            [then]
                {REMOVE_IMAGE {_X} {_Y}}
                [object]
                    silent=yes
                    duration=scenario
                    id=decay_potion_debuff
                    [filter]
                        x,y={_X},{_Y}
                    [/filter]
                    [effect]
                        apply_to=hitpoints
                        increase=-10%
                    [/effect]
                    [effect]
                        apply_to=status
                        add=slowed
                    [/effect]
                [/object]
            [/then]
        [/if]
    [/event]
#enddef

#define ITEM_BLITZ_AMULET _SIDE _X _Y _VAR
    [event]
        name=prestart

        {VARIABLE {_VAR} no}
    [/event]

    [item]
        x,y={_X},{_Y}
        image="items/necklace-bone.png"
        {ITEM_HALO}
    [/item]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            side={_SIDE}

            x,y={_X},{_Y}
            race=vampire
        [/filter]

        [filter_condition]
            {VARIABLE_CONDITIONAL {_VAR} equals no}
        [/filter_condition]

        # wmllint: markcheck off
        [item_dialog]
            variable={_VAR}
            name= _ "Strange Amulet"
            image="items/necklace-bone.png"
            description="<i>"+_"This amulet, forged from the bones of a mystical creature, hums with ancient energy; merely touching it suffuses one with a rejuvenating aura of untold power."+"</i>"
            effect= _"<span fgcolor='grey'><b>Gain Blitz Ability</b></span>"
            take_string= _"Wear It"
            leave_string= _"Leave It"
        [/item_dialog]
        # wmllint: markcheck on

        [if]
            {VARIABLE_CONDITIONAL {_VAR} equals yes}
            [then]
                {REMOVE_IMAGE {_X} {_Y}}
                [object]
                    silent=yes
                    duration=scenario
                    [filter]
                        x,y={_X},{_Y}
                    [/filter]
                    [effect]
                        apply_to=new_ability
                        [abilities]
                            {ABILITY_BLITZ}
                        [/abilities]
                    [/effect]
                [/object]
            [/then]
        [/if]
    [/event]
#enddef
